reticulate::repl_python()
print("Hello world!")
print("Hello world!")
import pandas as pd
pip install pandas
exit()
import pandas as pd
pip install pandas
pip install pandas
conda install pandas
library(keras)
install_keras()
q()
library(tidyverse)
# library(tidyllm)
# library(rollama) # https://jbgruber.github.io/rollama/
# library(here)
# library(glue)
library(quanteda)
data <- read_csv("data/donald/donald_representative_domain-group_txt.csv")
data <- read_csv("data/donald_representative_domain-group_txt.csv")
View(data)
test <- read_csv("data/donald_reduced.csv")
View(test)
View(data)
rm(test)
data_subset <- data %>%
group_by(domain_group) %>%
slice_sample(n = 100) %>%
ungroup()
rm(list=ls())
q()
library(tidyverse)
library(quanteda)
library(quanteda.dictionaries)
library(quanteda.textmodels)
library(quanteda.textplots)
library(quanteda.textstats)
library(readtext)
data <- read_csv("data/donald_representative_domain-group_txt.csv")
data <- data %>%
mutate(domain_group = factor(domain_group))
data_subset <- data %>%
group_by(domain_group) %>%
slice_sample(n = 100) %>%
ungroup()
str(data-subset)
str(data_subset)
test <- corpus("data/data_sentiment_llm.csv")
corpus_obj <- corpus(data_subset, text_field = "article_text")
corpus_obj
tokens_obj <- tokens(corpus_obj, remove_punct = TRUE)
View(tokens_obj)
str(tokens_obj)
library(tidyverse)
library(quanteda)
library(quanteda.dictionaries)
library(quanteda.textmodels)
library(quanteda.textplots)
library(quanteda.textstats)
library(readtext)
data <- read_csv("data/donald_representative_domain-group_txt.csv")
data_subset <- data %>%
group_by(domain_group) %>%
slice_sample(n = 100) %>%
ungroup()
corpus_obj <- corpus(data_subset, text_field = "article_text")
tokens_obj <- tokens(corpus_obj, remove_punct = TRUE)
tokens_obj <- tokens_tolower(tokens_obj)
dfm_obj <- dfm(tokens_obj, dictionary = restorative_nostalgia_dict)
dfm_obj <- dfm_lookup(tokens_obj, dictionary = restorative_nostalgia_dict)
str(data)
dfm_obj <- dfm_lookup(tokens_obj, dictionary = restorative_nostalgia_dict)
dfm_obj <- dfm(tokens_obj)
dfm_dict <- dfm_lookup(tokens_obj, dictionary = restorative_nostalgia_dict)
dfm_dict <- dfm_lookup(dfm_obj, dictionary = restorative_nostalgia_dict)
restorative_nostalgia_dict <- dictionary(list(
restorative_nostalgia = c(
# Historical framing
"earlier", "once was", "ancestor", "heritage",
"legacy", "roots", "traditional", "foundation", "forefather",
"before", "tradition",  "proud", "values",
"pride", "past", "now", "changes", "used to be", "was",
"young", "youth", "legacy", "ancestral", "yesterday",
# Idealization/Positive Sentiment About the Past
"golden", "glorious", "idyllic", "rose-tinted", "home",
"prosperity", "cherished", "storied", "lost glory", "once proud",
"better", "authentic", "peaceful", "pleasant", "real country",
"greatness", "impressive", "lost paradise",
# Negativity About the Present or Future
"decline", "decay", "losing", "lost", "eroding", "erosion", "moral",
"falling apart", "unravel", "broken", "astray",
"worse", "tomorrow", "future", "bittersweet",
# Superiority / group membership
"our people", "our", "us", "them", "their", "patriots",
"group", "we", "real", "outsiders", "majority", "minority", "belong",
"native", "superior", "inferior",
# Calls to Restore or Revive the Past
"bring back", "restore", "reclaim", "revive", "take back",
"great again", "return", "renaissance", "reset", "security", "fix",
"recapture",
# Terms associated with identity fusion and extremism
"homeland", "motherland", "fatherland", "family", "loyalty",
"blood", "brother", "sister", "daughters", "sons", "conspirators",
"stealing", "stolen", "resistance", "glory", "admire", "bloodline",
"kin", "traitor", "demolish", "pollute", "scum", "impure",
"brainwashed", "subjugate", "overwhelmed", "under siege", "running out of time",
"betray", "betrayal", "sell", "sold", "conspire", "collude",
# Martyrdom
"defend", "protect", "fight", "self-defence", "self-defense", "preserve"
)
))
dfm_dict <- dfm_lookup(dfm_obj, dictionary = restorative_nostalgia_dict)
nostalgia_counts <- convert(dfm_obj, to = "data.frame")
data <- cbind(data, nostalgia_counts[, -1])  # Exclude doc_id column if needed
rm(list=ls())
library(tidyverse)
library(quanteda)
library(quanteda.dictionaries)
library(quanteda.textmodels)
library(quanteda.textplots)
library(quanteda.textstats)
library(readtext)
data <- read_csv("data/donald_representative_domain-group_txt.csv")
data <- data %>%
mutate(domain_group = factor(domain_group))
data_subset <- data %>%
group_by(domain_group) %>%
slice_sample(n = 100) %>%
ungroup()
write_csv(data_subset, "data/data_sentiment_llm.csv")
data_test <- data %>%
group_by(domain_group) %>%
slice_sample(n = 20) %>%
ungroup()
# ping_ollama()
# pull_model("all-minilm")
#
# str(data)
#
# str(constructs)
restorative_nostalgia_dict <- dictionary(list(
restorative_nostalgia = c(
# Historical framing
"earlier", "once was", "ancestor", "heritage",
"legacy", "roots", "traditional", "foundation", "forefather",
"before", "tradition",  "proud", "values",
"pride", "past", "now", "changes", "used to be", "was",
"young", "youth", "legacy", "ancestral", "yesterday",
# Idealization/Positive Sentiment About the Past
"golden", "glorious", "idyllic", "rose-tinted", "home",
"prosperity", "cherished", "storied", "lost glory", "once proud",
"better", "authentic", "peaceful", "pleasant", "real country",
"greatness", "impressive", "lost paradise",
# Negativity About the Present or Future
"decline", "decay", "losing", "lost", "eroding", "erosion", "moral",
"falling apart", "unravel", "broken", "astray",
"worse", "tomorrow", "future", "bittersweet",
# Superiority / group membership
"our people", "our", "us", "them", "their", "patriots",
"group", "we", "real", "outsiders", "majority", "minority", "belong",
"native", "superior", "inferior",
# Calls to Restore or Revive the Past
"bring back", "restore", "reclaim", "revive", "take back",
"great again", "return", "renaissance", "reset", "security", "fix",
"recapture",
# Terms associated with identity fusion and extremism
"homeland", "motherland", "fatherland", "family", "loyalty",
"blood", "brother", "sister", "daughters", "sons", "conspirators",
"stealing", "stolen", "resistance", "glory", "admire", "bloodline",
"kin", "traitor", "demolish", "pollute", "scum", "impure",
"brainwashed", "subjugate", "overwhelmed", "under siege", "running out of time",
"betray", "betrayal", "sell", "sold", "conspire", "collude",
# Martyrdom
"defend", "protect", "fight", "self-defence", "self-defense", "preserve"
)
))
restorative_nostalgia_dict <- dictionary(list(
restorative_nostalgia = c(
# Historical framing
"earlier", "once was", "ancestor", "heritage",
"legacy", "roots", "traditional", "foundation", "forefather",
"before", "tradition",  "proud", "values",
"pride", "past", "now", "changes", "used to be", "was",
"young", "youth", "legacy", "ancestral", "yesterday",
# Idealization/Positive Sentiment About the Past
"golden", "glorious", "idyllic", "rose-tinted", "home",
"prosperity", "cherished", "storied", "lost glory", "once proud",
"better", "authentic", "peaceful", "pleasant", "real country",
"greatness", "impressive", "lost paradise",
# Negativity About the Present or Future
"decline", "decay", "losing", "lost", "eroding", "erosion", "moral",
"falling apart", "unravel", "broken", "astray",
"worse", "tomorrow", "future", "bittersweet",
# Superiority / group membership
"our people", "our", "us", "them", "their", "patriots",
"group", "we", "real", "outsiders", "majority", "minority", "belong",
"native", "superior", "inferior",
# Calls to Restore or Revive the Past
"bring back", "restore", "reclaim", "revive", "take back",
"great again", "return", "renaissance", "reset", "security", "fix",
"recapture",
# Terms associated with identity fusion and extremism
"homeland", "motherland", "fatherland", "family", "loyalty",
"blood", "brother", "sister", "daughters", "sons", "conspirators",
"stealing", "stolen", "resistance", "glory", "admire", "bloodline",
"kin", "traitor", "demolish", "pollute", "scum", "impure",
"brainwashed", "subjugate", "overwhelmed", "under siege", "running out of time",
"betray", "betrayal", "sell", "sold", "conspire", "collude",
# Martyrdom
"defend", "protect", "fight", "self-defence", "self-defense", "preserve"
)
))
# 1. Tokenize
corpus_obj <- corpus(data_subset, text_field = "article_text")
toks <- tokens(corpus_obj, remove_punct = TRUE)
toks <- tokens_tolower(toks)
# 2. Convert to dfm
dfm_all <- dfm(toks)
# 3. Lookup dictionary, aggregating under the single dictionary key
dfm_nostalgia <- dfm_lookup(dfm_all,
dictionary = restorative_nostalgia_dict,
levels = 1)
# 4. Convert to data.frame
nostalgia_counts <- convert(dfm_nostalgia, to = "data.frame")
View(nostalgia_counts)
head(nostalgia_counts)
# 'nostalgia_counts' will have 2 columns: "document" and "restorative_nostalgia"
# cbind or merge with your original data
data_subset <- cbind(
data_subset,
nostalgia_counts[, -1]  # exclude the 'document' col
)
# 5. Proportion of nostalgia
data_subset$nostalgia_proportion <- data_subset$restorative_nostalgia / ntoken(dfm_all)
View(data)
View(data_subset)
View(nostalgia_counts)
# 'nostalgia_counts' will have 2 columns: "document" and "restorative_nostalgia"
# cbind or merge with your original data
data_subset <- cbind(
data_subset,
nostalgia_counts[, -1]  # exclude the 'document' col
)
# 5. Proportion of nostalgia
data_subset$nostalgia_proportion <- data_subset$restorative_nostalgia / ntoken(dfm_all)
str(data_subset)
count(data_subset$domain_group)
table(data_subset$domain_group)
rm(list=ls())
library(tidyverse)
library(quanteda)
library(quanteda.dictionaries)
library(quanteda.textmodels)
library(quanteda.textplots)
library(quanteda.textstats)
library(readtext)
data <- read_csv("data/donald_representative_domain-group_txt.csv")
data <- data %>%
mutate(domain_group = factor(domain_group))
data_subset <- data %>%
group_by(domain_group) %>%
slice_sample(n = 100) %>%
ungroup()
# write_csv(data_subset, "data/data_sentiment_llm.csv")
# ping_ollama()
# pull_model("all-minilm")
#
# str(data)
#
# str(constructs)
restorative_nostalgia_dict <- dictionary(list(
restorative_nostalgia = c(
# Historical framing
"earlier", "once was", "ancestor", "heritage",
"legacy", "roots", "traditional", "foundation", "forefather",
"before", "tradition",  "proud", "values",
"pride", "past", "now", "changes", "used to be", "was",
"young", "youth", "legacy", "ancestral", "yesterday",
# Idealization/Positive Sentiment About the Past
"golden", "glorious", "idyllic", "rose-tinted", "home",
"prosperity", "cherished", "storied", "lost glory", "once proud",
"better", "authentic", "peaceful", "pleasant", "real country",
"greatness", "impressive", "lost paradise",
# Negativity About the Present or Future
"decline", "decay", "losing", "lost", "eroding", "erosion", "moral",
"falling apart", "unravel", "broken", "astray",
"worse", "tomorrow", "future", "bittersweet",
# Superiority / group membership
"our people", "our", "us", "them", "their", "patriots",
"group", "we", "real", "outsiders", "majority", "minority", "belong",
"native", "superior", "inferior",
# Calls to Restore or Revive the Past
"bring back", "restore", "reclaim", "revive", "take back",
"great again", "return", "renaissance", "reset", "security", "fix",
"recapture",
# Terms associated with identity fusion and extremism
"homeland", "motherland", "fatherland", "family", "loyalty",
"blood", "brother", "sister", "daughters", "sons", "conspirators",
"stealing", "stolen", "resistance", "glory", "admire", "bloodline",
"kin", "traitor", "demolish", "pollute", "scum", "impure",
"brainwashed", "subjugate", "overwhelmed", "under siege", "running out of time",
"betray", "betrayal", "sell", "sold", "conspire", "collude",
# Martyrdom
"defend", "protect", "fight", "self-defence", "self-defense", "preserve"
)
))
# 1. Tokenize
corpus_obj <- corpus(data_subset, text_field = "article_text")
toks <- tokens(corpus_obj, remove_punct = TRUE)
toks <- tokens_tolower(toks)
# 2. Convert to dfm
dfm_all <- dfm(toks)
# 3. Lookup dictionary, aggregating under the single dictionary key
dfm_nostalgia <- dfm_lookup(dfm_all,
dictionary = restorative_nostalgia_dict,
levels = 1)
# 4. Convert to data.frame
nostalgia_counts <- convert(dfm_nostalgia, to = "data.frame")
head(nostalgia_counts)
data_subset <- cbind(
data_subset,
restorative_nostalgia = nostalgia_counts$restorative_nostalgia
)
View(dfm_all)
View(data_subset)
# 5. Proportion of nostalgia
data_subset$nostalgia_proportion <- data_subset$restorative_nostalgia / ntoken(dfm_all)
View(data_subset)
table(data_subset$domain_group)
data_subset %>%
group_by(domain_group) %>%
summarise(
mean_nostalgia = mean(restorative_nostalgia, na.rm = TRUE),
sum_nostalgia  = sum(restorative_nostalgia, na.rm = TRUE),
mean_proportion = mean(nostalgia_proportion, na.rm = TRUE)
) %>%
arrange(desc(mean_nostalgia))
lm_model <- lm(mean_nostalgia ~ relevel(domain_group, ref = "LB00"), data = data_subset)
View(data_subset)
lm_model <- lm(restorative_nostalgia ~ relevel(domain_group, ref = "LB00"), data = data_subset)
summary(lm_model)
View(data_subset)
lm_model <- lm(nostalgia_proportion ~ relevel(domain_group, ref = "LB00"), data = data_subset)
summary(lm_model)
rm(list=ls())
library(tidyverse)
source("~/GitHub/llm_python/quanteda_sentiment.R")
corpus_obj <- corpus(data, text_field = "article_text")
toks <- tokens(corpus_obj, remove_punct = TRUE)
toks <- tokens_tolower(toks)
# 2. Convert to dfm
dfm_all <- dfm(toks)
# 3. Lookup dictionary, aggregating under the single dictionary key
dfm_nostalgia <- dfm_lookup(dfm_all,
dictionary = restorative_nostalgia_dict,
levels = 1)
# 4. Convert to data.frame
nostalgia_counts <- convert(dfm_nostalgia, to = "data.frame")
head(nostalgia_counts)
# 'nostalgia_counts' will have 2 columns: "document" and "restorative_nostalgia"
# cbind or merge with your original data
data <- cbind(
data,
restorative_nostalgia = nostalgia_counts$restorative_nostalgia
)
# 5. Proportion of nostalgia
data$nostalgia_proportion <- data$restorative_nostalgia / ntoken(dfm_all)
str(data)
table(data$domain_group)
data %>%
group_by(domain_group) %>%
summarise(
mean_nostalgia = mean(restorative_nostalgia, na.rm = TRUE),
sum_nostalgia  = sum(restorative_nostalgia, na.rm = TRUE),
mean_proportion = mean(nostalgia_proportion, na.rm = TRUE)
) %>%
arrange(desc(mean_nostalgia))
rm(list=ls())
source("~/GitHub/llm_python/quanteda_sentiment.R")
summary(lm_model)
summary(lm_model, standardized = TRUE)
install.packages("easystats")
library(easystats)
estimate_contrasts(lm_model)
update.packages("data.table")
install.packages("data.table")
